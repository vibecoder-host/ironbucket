worker_processes auto;
worker_rlimit_nofile 65535;

events {
    worker_connections 16384;
    use epoll;
    multi_accept on;
}

http {
    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 100;
    reset_timedout_connection on;

    # Disable access log for performance
    access_log off;

    # Upstream with keepalive connections
    upstream ironbucket {
        # Session affinity - required for consistent operations
        ip_hash;

        # Note: ip_hash and least_conn are mutually exclusive
        # Use ip_hash for production (session affinity)
        # Use least_conn for pure performance benchmarks without affinity
        # least_conn;

        server ironbucket-node1:9000 max_fails=3 fail_timeout=30s;
        server ironbucket-node2:9000 max_fails=3 fail_timeout=30s;

        # Keep connections alive to backends
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }

    server {
        listen 80 reuseport;
        client_max_body_size 0;
        client_body_buffer_size 128k;

        # Disable buffering for S3 operations
        proxy_buffering off;
        proxy_request_buffering off;

        # Connection pool to upstream
        proxy_http_version 1.1;
        proxy_set_header Connection "";

        location / {
            proxy_pass http://ironbucket;

            # Minimal headers for performance
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;

            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # Don't retry on POST/PUT
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
            proxy_next_upstream_tries 2;
        }

        # Health check endpoint (optional)
        location /health {
            access_log off;
            return 200 "OK\n";
            add_header Content-Type text/plain;
        }
    }
}